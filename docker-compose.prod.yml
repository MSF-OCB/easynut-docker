version: "3.3"
services:
  web:
    image: elavaud/easynut:1
    container_name: easynut_django
    env_file: .env
    expose:
      - "8000"
    depends_on:
      - mysql
      - redis
    volumes:
      - type: volume
        source: django_static
        target: /data/web/easynut/static
        volume:
          nocopy: true
      - type: bind
        source: ./backups/backups
        target: /opt/shared
        readonly: true
    networks:
      front-end:
        ipv4_address: 172.20.0.2
      back-end:
        ipv4_address: 172.21.0.2
    working_dir: /data/web/easynut
    command: [sh, -c, "/usr/bin/gunicorn django_easynut.wsgi:application -w 2 -b :8000"]
    restart: always
  nginx:
    image: nginx:1.13-alpine
    container_name: easynut_nginx
    ports:
      - "80:80"
    depends_on:
      - web
    volumes:
      - type: volume
        source: django_static
        target: /data/web/easynut/static
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /tmp/docker.sock
        readonly: true
      - type: bind
        source: ./logs/nginx
        target: /var/log/nginx
    networks:
      front-end:
        ipv4_address: 172.20.0.3
    restart: always
    build:
      context: ./nginx/
  mysql:
    image: mysql:5.7
    container_name: easynut_mysql
    env_file: .env
    expose:
      - "3306"
    volumes:
      - type: bind
        source: ./mysql/docker-entrypoint-initdb.d
        target: /docker-entrypoint-initdb.d
        readonly: true
      - type: volume
        source: mysql_data
        target: /var/lib/mysql
    networks:
      back-end:
        ipv4_address: 172.21.0.4
    restart: always
  redis:
    image: redis:4.0.6-alpine
    container_name: easynut_redis
    expose:
      - "6379"
    networks:
      back-end:
        ipv4_address: 172.21.0.5
    restart: always
  backups:
    image: alpine:3.7
    container_name: easynut_backups
    env_file: .env
    depends_on:
      - mysql 
      - web
    volumes:
      - type: bind
        source: ./backups/backups
        target: /backup
    networks:
      back-end:
        ipv4_address: 172.21.0.6
    restart: always
    build:
      context: ./backups/
      args:
        DATA_DB_NAME: ${DATA_DB_NAME}
        CRON_TIME: ${CRON_TIME}

volumes:
  django_static:
  mysql_data:

networks:
  front-end:
    driver: bridge
    ipam:
      driver: default
      config: 
        - subnet: 172.20.0.0/16
  back-end:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16
