version: "3.3"
services:
  web:
    image: msfocb/easynut:1.2
    container_name: easynut_django
    env_file: .env
    expose:
      - "8000"
    depends_on:
      - mysql
      - redis
    volumes:
      - type: volume
        source: django_static
        target: /data/web/easynut/static
      - type: bind
        source: ./backups/backups
        target: /opt/shared
        read_only: true
      - type: bind
        source: ./wait-for
        target: /wait-for
        read_only: true
    networks:
      front-end:
        ipv4_address: 172.20.0.2
      back-end:
        ipv4_address: 172.21.0.2
    command: [sh, -c, "python manage.py collectstatic --no-input && /wait-for -t 30 mysql:3306 && /wait-for -t 30 redis:6379 -- gunicorn django_easynut.wsgi:application -w 2 -b :8000"]
    restart: always
  nginx:
    image: nginx:1.13-alpine
    container_name: easynut_nginx
    ports:
      - "80:80"
    depends_on:
      - web
    volumes:
      - type: volume
        source: django_static
        target: /data/web/easynut/static
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /tmp/docker.sock
        read_only: true
      - type: bind
        source: ./nginx/logs
        target: /var/log/nginx
      - type: bind
        source: ./nginx/default.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
      - type: bind
        source: ./nginx/easynut_django.local
        target: /etc/nginx/easynut_django.local
        read_only: true
      - type: bind
        source: ./wait-for
        target: /wait-for
        read_only: true
    networks:
      front-end:
        ipv4_address: 172.20.0.3
    command: [sh, -c, "/wait-for -t 90 web:8000 -- nginx -g 'daemon off;'"]
    restart: always
  mysql:
    image: mysql:5.7
    container_name: easynut_mysql
    env_file: .env
    expose:
      - "3306"
    volumes:
      - type: bind
        source: ./mysql/docker-entrypoint-initdb.d
        target: /docker-entrypoint-initdb.d
        read_only: true
      - type: volume
        source: mysql_data
        target: /var/lib/mysql
    networks:
      back-end:
        ipv4_address: 172.21.0.4
    restart: always
  redis:
    image: redis:4.0.6-alpine
    container_name: easynut_redis
    expose:
      - "6379"
    networks:
      back-end:
        ipv4_address: 172.21.0.5
    sysctls:
      - net.core.somaxconn=65535
    restart: always
  backups:
    image: elavaud/backups:1
    container_name: easynut_backups
    env_file: .env
    depends_on:
      - mysql
      - web
    volumes:
      - type: bind
        source: ./backups/backups
        target: /backup
      - type: bind
        source: ./wait-for
        target: /wait-for
        read_only: true
    networks:
      back-end:
        ipv4_address: 172.21.0.6
    command: [sh, -c, "/wait-for -t 30 mysql:3306 && /wait-for -t 60 web:8000 -- /run.sh"]
    restart: always

volumes:
  django_static:
  mysql_data:

networks:
  front-end:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
  back-end:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16
