version: "3.3"
services:
  web:
    restart: always
    build: 
      context: ./web/
    ports:
      - "8000:8000"
    expose:
      - "8000"
    depends_on:
      - mysql
    env_file: .env
    volumes:
      - ./backups/backups:/opt/shared
#      - ./source:/data/web/easynut:rw
    container_name: easynut_django
    networks:
      back-end:
        ipv4_address: 172.21.0.2
    command: [sh, -c, "python manage.py runserver 0.0.0.0:8000"]
  mysql:
    restart: always
    image: mysql:5.7
    volumes:
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    env_file: .env
    expose:
      - "3306"
    networks:
      back-end:
        ipv4_address: 172.21.0.4
    container_name: easynut_mysql
  backups:
    image: elavaud/backups:1
    container_name: easynut_backups
    env_file: .env
    depends_on:
      - mysql
      - web
    volumes:
      - type: bind
        source: ./backups/backups
        target: /backup
    networks:
      back-end:
        ipv4_address: 172.21.0.6
    command: [sh, -c, "/run.sh"]
    restart: always
  phpmyadmin:
    restart: always
    image: phpmyadmin/phpmyadmin:4.7
    container_name: easynut_phpmyadmin
    ports:
      - "8080:80"
    expose:
      - "80"
    depends_on:
      - mysql
    env_file: .env
    environment:
      - PMA_HOST=easynut_mysql
    networks:
      back-end:
        ipv4_address: 172.21.0.7

volumes:
  mysql_data:

networks:
  back-end:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16
